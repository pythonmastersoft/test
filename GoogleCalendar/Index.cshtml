@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayoutPage.cshtml";
}

ridam
vinod
gunjewar

mastersoft

<link href="~/Content/css/jquery.timepicker.min.css" rel="stylesheet" />
<link href="~/Content/Calendar.css" rel="stylesheet" />
@*<link href="~/Scripts/LibraryMaster/bootstrap-tagsinput.css" rel="stylesheet" />*@
<link href="~/Content/bootstrap-tagsinput.css" rel="stylesheet" />
<style>
    .bootstrap-tagsinput {
    background-color: #fff;
    border: 1px solid #ccc;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    display: block;
    padding: 4px 6px;
    color: #555;
    vertical-align: middle;
    border-radius: 4px;
    max-width: 100%;
    line-height: 22px;
    cursor: text;
}
.bootstrap-tagsinput input {
    border: none;
    box-shadow: none;
    outline: none;
    background-color: transparent;
    padding: 0 6px;
    margin: 0;
    width: auto;
    max-width: inherit;
}
</style>

<div class="modal fade bs-example-modal-lg in" id="myModal" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg" style="opacity: 1">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                <h5>Events</h5>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3 text-right">
                                <button id="btnCloseModel" data-dismiss="modal" class="btn btn-default"><i class="glyphicon glyphicon-remove"></i></button>
                            </div>
                        </div>
                    </div>


                    <div class="panel-body">
                        <div id="AppendEvent">

                            @* <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <h3><label><strong>Google I/O 2015</strong></label></h3>
                                            <label>January 27, 2021, 9:30pm – January 28, 2021, 5:30am</label><br />
                                            <label>Open 800 Howard St., San Francisco, CA 94103 in Maps</label><br />
                                            <label><a href="#">link</a></label><br />
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg in" id="myModal1" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg" style="opacity: 1">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                <h5>Create Events</h5>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3 text-right">
                                <button id="btnCloseModel1" data-dismiss="modal" class="btn btn-default"><i class="glyphicon glyphicon-remove"></i></button>
                            </div>
                        </div>
                    </div>


                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-12 col-sm-12">
                                    Meeting Title <span class="red"><b>*</b></span>
                                    <div class="form-group">
                                        <input id="txtSummary" name="txtSummary" class="form-control" placeholder="Add Meeting Title" tabindex="14" />
                                    </div>
                                </div>
                                <div class="col-md-3 col-sm-12 col-xs-12">
                                    <label>Start Date</label>
                                    <div class="input-group">
                                        <input type="text" id="txtStartDate" name="txtDateTo" tabindex="2" class="form-control datepicker" data-inputmask="'mask':'99/99/9999'" maxlength="14" placeholder="DD/MM/YYYY" />
                                        <div class="input-group-addon" for="Startdate">
                                            <span id="Startdate" class="fa fa-calendar open-datepicker"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2 col-sm-12 col-xs-12">
                                    <label>Start Time</label>
                                    <div class="form-group">
                                        <input type="text" id="txtstarttime" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-3 col-sm-12 col-xs-12">
                                    <label>End Date</label>
                                    <div class="input-group">
                                        <input type="text" id="txtEndDate" name="txtDateTo" tabindex="2" class="form-control datepicker" data-inputmask="'mask':'99/99/9999'" maxlength="14" placeholder="DD/MM/YYYY" />
                                        <div class="input-group-addon" for="Enddate">
                                            <span id="Enddate" class="fa fa-calendar open-datepicker"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2 col-sm-12 col-xs-12">
                                    <label>End Time</label>
                                    <div class="form-group">
                                        <input type="text" id="txtendtime" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-2 col-sm-12 col-xs-12 form-group">
                                    <label></label>
                                    <div class="checkbox checkbox-primary">
                                        <input type="checkbox" tabindex="5" id="IsAllDay" name="IsAllDay"  />
                                        <label for="IsAllDay">ALL Day</label>

                                    </div>
                                </div>
                                <div class="col-md-12 col-sm-12">
                                    Meeting Description
                                        <div class="form-group">
                                            <input id="txtdescription" name="txtdescription" class="form-control" placeholder="Enter Meeting description." tabindex="17" />
                                        </div>
                                </div>
                                <div class="col-md-12 col-sm-12">
                                    Meeting Location
                                        <div class="form-group">
                                            <input id="txtlocation" name="txtlocation" class="form-control" placeholder="Enter Meeting Location." tabindex="17" />
                                        </div>
                                </div>
                                <div class="col-md-12 col-sm-12">
                                    Invite Guest Email
                                        <div class="form-group">
                                          <input type="text" value="" data-role="tagsinput" id="tags" class="form-control" placeholder="You Can Add Multiple Guest">
                                        </div>
                                </div>
                                <div class="col-md-4 col-sm-12 col-xs-12 form-group">

                                    <div class="checkbox checkbox-primary">
                                        <input type="checkbox" tabindex="5" id="IsActiveMeet" name="IsActiveMeet" checked="checked" />
                                        <label for="IsActiveMeet">Add Google Meet video conferencing</label>

                                    </div>
                                </div>
                                <div class="col-md-3 col-sm-12 col-xs-12 form-group">

                                    <div class="checkbox checkbox-primary">
                                        <input type="checkbox" tabindex="5" id="IsModifyEvent" name="IsModifyEvent"  />
                                        <label for="IsModifyEvent">Modify Event</label>

                                    </div>
                                </div>
                                  <div class="col-md-3 col-sm-12 col-xs-12 form-group">

                                    <div class="checkbox checkbox-primary">
                                        <input type="checkbox" tabindex="5" id="IsInviteothers" name="IsInviteothers"  />
                                        <label for="IsInviteothers">Invite others</label>

                                    </div>
                                </div>
                                  <div class="col-md-2 col-sm-12 col-xs-12 form-group">

                                    <div class="checkbox checkbox-primary">
                                        <input type="checkbox" tabindex="5" id="IsSeeguestlist" name="IsSeeguestlist"  />
                                        <label for="IsSeeguestlist">See guest list</label>

                                    </div>
                                </div>
                            </div>



                        </div>
                    </div>
                    <div class="panel-footer text-center">

                        <button type="button" class="btn btn-primary" id="btnSubmitEvent" tabindex="32">Submit</button>
                        &nbsp; 
                            <button type="button" class="btn btn-danger" id="btnClearEvent" tabindex="33">Cancel</button>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>







<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">

            <div class="col-md-12 col-sm-12 col-xs-12">

                <button id="CreateEvent_button" style="display: none;" class="btn btn-primary" data-toggle="modal" data-target="#myModal1">Create Event</button>
                <button id="signout_button" style="display: none;" class="btn btn-danger">Sign Out</button>
                <button id="authorize_button" style="display: none;" class="btn btn-success">Sign In</button>
            </div>

        </div>
    </div>


    <div class="panel-body">
        <div class="col-md-12 col-sm-12 col-xs-12">
            
              <div class="x_content">
                    <div class="calendar"></div>
                </div>
           
        </div>
    </div>
</div>

















<pre id="content" style="white-space: pre-wrap;" hidden></pre>


<input type="hidden" id="hddate" value="0" />
<input type="hidden" id="hdmonthdate" value="0" />
<input type="hidden" id="hdmonthdays" value="0" />
<input type="hidden" id="hdmonthlog" value="0" />
<input type="hidden" id="hdeventid" value="0" />


@section Scripts{
    <script src="~/Scripts/modernizr-2.5.3.js"></script>
  
    <script src="~/Scripts/jquery.timepicker.min.js"></script>
    <script src="~/Scripts/LibraryMaster/GoogleCalendar.js"></script>
    <script src="~/Scripts/LibraryMaster/bootstrap-tagsinput.min.js"></script>
    <script async defer src="https://apis.google.com/js/api.js"  
        onload="this.onload=function(){};handleClientLoad()"
        onreadystatechange="if (this.readyState === 'complete') this.onload()">

    </script>
    <script>


        $(document).ready(function () {
            Googlecal.Init();

        });



        // Client ID and API key from the Developer Console
        var CLIENT_ID = '348503370853-04j5d3e1hpapsbaodakvu0mlq0ful1ii.apps.googleusercontent.com';
        var API_KEY = 'AIzaSyBUrq-i-0l9V6ZRaF9j_lUgjOl-OCvwXLo';

        // Array of API discovery doc URLs for APIs used by the quickstart
        var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];

        // Authorization scopes required by the API; multiple scopes can be
        // included, separated by spaces.
        var SCOPES = "https://www.googleapis.com/auth/calendar";

        var authorizeButton = document.getElementById('authorize_button');
        var signoutButton = document.getElementById('signout_button');
        var CreateEventbutton = document.getElementById('CreateEvent_button');

        /**
         *  On load, called to load the auth2 library and API client library.
         */
        function handleClientLoad() {
            gapi.load('client:auth2', initClient);
            //alert(1);
        }

        /**
         *  Initializes the API client library and sets up sign-in state
         *  listeners.
         */
        function initClient() {
            gapi.client.init({
                apiKey: API_KEY,
                clientId: CLIENT_ID,
                discoveryDocs: DISCOVERY_DOCS,
                scope: SCOPES
            }).then(function () {
                // Listen for sign-in state changes.
                gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

                // Handle the initial sign-in state.
                updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
                authorizeButton.onclick = handleAuthClick;
                signoutButton.onclick = handleSignoutClick;
            }, function (error) {
                appendPre(JSON.stringify(error, null, 2));
            });
        }

        /**
         *  Called when the signed in status changes, to update the UI
         *  appropriately. After a sign-in, the API is called.
         */
        function updateSigninStatus(isSignedIn) {
            if (isSignedIn) {
                authorizeButton.style.display = 'none';
                signoutButton.style.display = 'none';
                CreateEventbutton.style.display = 'block';
                //debugger
                listUpcomingMonthsEvents();
               // alert(JSON.stringify(Eventsmonth));
            } else {
                authorizeButton.style.display = 'block';
                signoutButton.style.display = 'none';
                CreateEventbutton.style.display = 'none';
            }
        }

        /**
         *  Sign in the user upon button click.
         */
        function handleAuthClick(event) {
            gapi.auth2.getAuthInstance().signIn();
        }

        /**
         *  Sign out the user upon button click.
         */
        function handleSignoutClick(event) {
            gapi.auth2.getAuthInstance().signOut();
        }

        /**
         * Append a pre element to the body containing the given message
         * as its text node. Used to display the results of the API call.
         *
         * @@param {string} message Text to be placed in pre element.
         */
        function appendPre(message) {

            var pre = document.getElementById('content');
            var textContent = document.createTextNode(message + '\n');
            pre.appendChild(textContent);
            $('#myModal').modal('show');
        }

        /**
         * Print the summary and start datetime/date of the next ten events in
         * the authorized user's calendar. If no events are found an
         * appropriate message is printed.
         */
        function listUpcomingEvents() {
            //alert($('#hddate').val());
            var date = new Date($('#hddate').val());
            var nextdate = date.addDays(date,1);
            //alert(date);
            //alert(nextdate);
            gapi.client.calendar.events.list({
                'calendarId': 'primary',
                'timeMin': (date).toISOString(),
                'timeMax': (nextdate).toISOString(),
                'showDeleted': false,
                'singleEvents': true,
                'maxResults': 10,
                'orderBy': 'startTime'
            }).then(function (response) {
                var events = response.result.items;
                //alert(JSON.stringify(events));
                appendPre('Upcoming events:');
                $('#AppendEvent').empty();
                var html = "";
                if (events.length > 0) {
                    for (i = 0; i < events.length; i++) {
                        var event = events[i];
                        var when = event.start.dateTime;
                        if (!when) {
                            when = event.start.date;
                        }

                        appendPre(event.summary + ' (' + when + ')')

                        var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };

                        var UtcDate = new Date(event.start.dateTime).toLocaleString("en-US");//new Intl.DateTimeFormat('en', { month: 'short' }).format(new Date(event.start.dateTime));//.toUTCString();
                        //alert(UtcDate);
                        var UtcEndDate = new Date(event.end.dateTime).toLocaleString("en-US");//new Intl.DateTimeFormat('en', { month: 'short' }).format(new Date(event.end.dateTime)); //new Date(event.end.dateTime);//.toUTCString();
                        //alert(UtcEndDate);
                        html += '<div class="panel panel-default">';
                        html += '<div class="panel-body">';
                        html += '<div class="row">';
                        html += '<div class="col-md-12">';
                        html += '<label><strong> Meeting Title - </strong>' + event.summary + '</label><br/>';
                        html += '<label>Meeting Date & Time -  ' + UtcDate + ' – ' + UtcEndDate + '</label> (GMT+05:30) India Standard Time - Kolkata <br />';
                        if (event.location != undefined) {
                            html += '<label><strong>Where  -  </strong>' + event.location + '</label><br />';
                        }

                        if (event.description != undefined) {
                            html += '<label><strong>Meeting Agenda - </strong>' + event.description + '</label><br />';
                        }
                        if (event.hangoutLink != undefined) {
                            html += '<label><a href="' + event.hangoutLink + '"  target="_blank" class="btn btn-primary"><i class="fa fa-share-alt" aria-hidden="true"></i>  Join with Google Meet</a></label><br />';
                        }
                        html += '<label>Find more details on your <a href="' + event.htmlLink + '"  target="_blank"><i class="fa fa-calendar" aria-hidden="true"></i> Google Calender</a></label><br />';
                        html += '<button class="btn btn-success" onClick="GetEventData(\'' + event.id + '\')">Update</button>';
                        html += '<button class="btn btn-danger" onClick="deleteEvent(\'' + event.id + '\')">Delete</button>';
                        html += '</div>';
                        html += ' </div>';
                        html += '</div>';
                        html += '</div>';
                    }
                } else {
                    appendPre('No upcoming events found.');
                    html += '<h4><label><strong>No upcoming events found.</strong></label></h4>';
                }
                $('#AppendEvent').append(html);
            });
        }




        function listUpcomingMonthsEvents() {
            //handleClientLoad();
            var date = new Date($('#hdmonthdate').val());
            var nextdate = date.addDays(date,$('#hdmonthdays').val());
            gapi.client.calendar.events.list({
                'calendarId': 'primary',
                'timeMin': (date).toISOString(),
                'timeMax': (nextdate).toISOString(),
                'showDeleted': false,
                'singleEvents': true,
                'maxResults': 20,
                'orderBy': 'startTime'
            }).then(function (response) {
                var events = response.result.items;

                if (events.length > 0) {
                    for (i = 0; i < events.length; i++) {
                                var event = events[i];
                                var when = event.start.dateTime;
                                if (!when) {
                                    when = event.start.date;
                                    
                                }
                                var d = new Date(when);
                                var n = d.getUTCDate();
                                var id = "#date_" + n;
                                $(id).css("background-color", "#346cb0");
                                $(id).css("color", "#fff");

                    }
                }

                
                return events;
            });
        }


        function deleteEvent(event_id) {
            //alert(event_id);
            gapi.client.load('calendar', 'v3', function () {
                var request = gapi.client.calendar.events.delete({
                    'calendarId': 'primary',
                    'eventId': event_id
                });
                request.execute(function (response) {
                    if (response.error || response == false) {
                        $("#myModal").modal('hide');
                        toastr.warning('Event Not Deleted Please Try Again.');
                    }
                    else {
                        $("#myModal").modal('hide');
                        toastr.success('Event Deleted Successfully.');
                    }
                });
            });
        }


        function GetEventData(event_id)
        {
           


            
            var request = gapi.client.calendar.events.get({ "calendarId": 'primary', "eventId": event_id });

            request.execute(function (event) {


                $('#hdeventid').val(event.id);
                $('#txtdescription').val(event.description);
                $('#txtlocation').val(event.location);
                $('#txtSummary').val(event.summary);

                $.each(event.attendees, function (key, item) {

                    $('#tags').tagsinput('add', item.email);
                });
                
                if (event.hangoutLink != null || event.hangoutLink != undefined)
                {
                    if (event.hangoutLink == true) {
                        $("#IsActiveMeet").prop('checked', true)
                    }
                }

                if (event.guestsCanModify == true) {
                    $("#IsModifyEvent").prop('checked', true)
                }
                else
                {
                    $("#IsModifyEvent").prop('checked', false)
                }


                var startdate = event.start.dateTime.split('T');
                var CBTStartDate = cDate(startdate[0]);
                $("#txtStartDate").val(CBTStartDate);
                //$('#txtStartDate').val(startdate[0]);
                $('#txtstarttime').val(startdate[1].substring(0, 8));

                var enddate = event.end.dateTime.split('T');
                var CBTEndDate = cDate(enddate[0]);
                $("#txtEndDate").val(CBTEndDate);
                $('#txtendtime').val(enddate[1].substring(0, 8));

                $("#myModal").modal('hide');
                $('#myModal1').modal('show');
            });
           
        }

        function UpdateEvent(event_id)
        {
            var event = gapi.client.calendar.events.get({ "calendarId": 'primary', "eventId": event_id });

            var request = gapi.client.calendar.events.patch({
                'calendarId': 'primary',
                'eventId': event_id,
                'resource': event
            });

            request.execute(function (event) {
                console.log(event);
            });
        }


        Date.prototype.addDays = function (date, days) {
            var d = new Date(date);
            d.setDate(d.getDate() + parseInt(days))
            return d;
        }

        function cDate(jSonDate) {
            //var dateString = jSonDate.substr(6);
            var currentTime = new Date(jSonDate);
            var month = ('0' + (currentTime.getMonth() + 1)).slice(-2);
            var day = ('0' + (currentTime.getDate())).slice(-2);
            var year = currentTime.getFullYear();
            var date = day + "/" + month + "/" + year;
            return date;
        };


    </script>

    

      <script src="~/Content/Calendar.js"></script>
}
